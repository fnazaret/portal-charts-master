global:
  __metadata:
    label: "Global install settings"
  ## Image configuration metadata
  image:
    repository:
      __metadata:
        name: "repository"
        label: "Docker image registry"
        description: "Docker images will be fetched from this registry"
        type: "string"
        immutable: false
        required: true
    pullPolicy:
      __metadata:
        label: "Image pull policy"
        description: "Controls when Docker images are fetched from the registry"
        type: "string"
        immutable: false
        required: true
        options:
        - label: "Always"
          value: "Always"
        - label: "Never"
          value: "Never"
        - label: "IfNotPresent"
          value: "IfNotPresent"
    pullSecret:
      __metadata:
        label: "Image pull secret"
        description: "If using a registry that requires authentication, the name of the secret containing credentials"
        type: "string"
        required: false



## global persistence parameters
persistence:
  __metadata:
    label: "Persistent Storage (Apache Kafka)"
  enabled:
    __metadata:
      label: "Enable persistent storage for Apache Kafka"
      description: "Store Apache Kafka data on Persistent Volumes"
      type: "boolean"
      required: true
  useDynamicProvisioning:
    __metadata:
      label: "Use dynamic provisioning for Apache Kafka"
      description: "Use a Storage Class when provisioning Persistent Volumes for Apache Kafka"
      type: "boolean"
      required: true
  dataPVC:
    __metadata:
      label: "Data PVCs (Apache Kafka)"
    name:
      __metadata:
        label: "Name"
        description: "Prefix for the name of Persistent Volume Claims used for Apache Kafka"
        type: "string"
        required: true
    storageClassName:
      __metadata:
        label: "Storage Class name"
        description: "Storage Class of the Persistent Volume Claims created for Apache Kafka"
        type: "string"
        required: false
    size:
      __metadata:
        label: "Size"
        description: "Size of the Persistent Volume Claims created for Apache Kafka"
        type: "string"
        required: true


kafka:
  __metadata:
    label: "Kafka broker configuration"
  ## Resource requests and limits configuration metadata
  resources:
    __metadata:
      label: "Resources (Apache Kafka)"
    requests:
      cpu:
        __metadata:
          label: "CPU request for Kafka brokers"
          description: "The expected CPU resource that will be required for each Kafka broker expressed in CPU units"
          type: "string"
          required: true
      memory:
        __metadata:
          label: "Memory request for Kafka brokers"
          description: "The base amount of memory allocated for each Kafka broker. The value should be a plain integer using one of these suffixes: Gi, G, Mi, M"
          type: "string"
          required: true
    limits:
      cpu:
        __metadata:
          label: "CPU limit for Kafka brokers"
          description: "The maximum CPU resource that is allowed for each Kafka broker when the broker is heavily loaded expressed in CPU units"
          type: "string"
          required: true
      memory:
        __metadata:
          label: "Memory limit for Kafka brokers"
          description: "The maximum amount of memory that will be allocated for each Kafka broker when the broker is heavily loaded. The value should be a plain integer using one of these suffixes: Gi, G, Mi, M"
          type: "string"
          required: true
  ## Replica count configuration metadata
  brokers:
    __metadata:
      name: "brokers"
      label: "Kafka brokers"
      description: "Number of brokers in the Kafka cluster"
      type: "number"
      immutable: false
      required: true
  offsetsTopicReplicationFactor:
    __metadata:
      label: "offsets.topic.replication.factor"
      description: >
        The replication factor for the offsets topic (set higher to ensure availability). Internal topic creation will fail until the cluster size meets this replication factor requirement
      type: "number"
      required: true
  minInsyncReplicas:
    __metadata:
      label: "min.insync.replicas"
      description: >
        In order to improve availability, each topic can be replicated onto multiple brokers. If a following replica is keeping up with the partition leader, its replica is in-sync. Any follower with an in-sync replica can become the leader without losing any messages
      type: "number"
      required: true
  compressionType:
    __metadata:
      label: "compression.type"
      description: >
        Determines the final compression for the topic, or whether to retain the compression set by the producer
      type: "string"
      required: true
  autoCreateTopicsEnable:
    __metadata:
      label: "auto.create.topics.enable"
      description: >
        Allows topics to be created automatically when accessing a topic that does not exist
      type: "boolean"
      required: true
  deleteTopicEnable:
    __metadata:
      label: "delete.topic.enable"
      description: >
        Enables topics to be deleted. Setting this value to false will prevent topics from being deleted
      type: "boolean"
      required: true

zookeeper:
  __metadata:
    label: "ZooKeeper settings"
  resources:
    __metadata:
      label: "Resources (Apache ZooKeeper)"
    requests:
      cpu:
        __metadata:
          label: "CPU request for ZooKeeper servers"
          description: "The expected CPU resource that will be required for each ZooKeeeper server expressed in CPU units"
          type: "string"
          required: true
    limits:
      cpu:
        __metadata:
          label: "CPU limit for ZooKeeper servers"
          description: "The maximum CPU resource that is allowed for each ZooKeeper server when the server is heavily loaded expressed in CPU units"
          type: "string"
          required: true
  persistence:
    __metadata:
      label: "Persistent Storage (Apache ZooKeeper)"
    enabled:
      __metadata:
        label: "Enable persistent storage for ZooKeeper servers"
        description: "Store Apache ZooKeeper data on Persistent Volumes"
        type: "boolean"
        required: true
    useDynamicProvisioning:
      __metadata:
        label: "Use dynamic provisioning for ZooKeeper servers"
        description: "Use a Storage Class when provisioning Persistent Volumes for Apache ZooKeeper"
        type: "boolean"
        required: true
  dataPVC:
    __metadata:
      label: "Data PVCs (Apache ZooKeeper)"
    name:
      __metadata:
        label: "Name"
        description: "Prefix for the name of Persistent Volume Claims used for Apache ZooKeeper"
        type: "string"
        required: true
    storageClassName:
      __metadata:
        label: "Storage Class name"
        description: "Storage class of the Persistent Volume Claims created for Apache ZooKeeper"
        type: "string"
        required: false
    size:
      __metadata:
        label: "Size"
        description: "Size of the Persistent Volume Claims created for Apache ZooKeeper"
        type: "string"
        required: true


proxy:
  __metadata:
    label: "Kafka external access configuration"
  externalAccessEnabled:
    __metadata:
      label: "Enable external access"
      description: >
        Enable external access to the Kubernetes cluster
      type: "boolean"
      required: true
  secureConnectionsEnabled:
    __metadata:
      label: "Secure Connections Only"
      description: >
        Secure external access using TLS 1.2
      type: "boolean"
      required: false
  externalEndpoint:
    __metadata:
      label: "External Hostname/IP address"
      description: >
        The external hostname or IP address to be used by external clients
      type: "string"
      required: false

## TLS info
tls:
  __metadata:
    label: "Secure connections"
  type:
    __metadata:
      label: "Certificate type"
      description: "Choose whether to supply the necessary certificate details, or have a self-signed certificate generated"
      type: "string"
      required: true
      immutable: false
      options:
      - label: "provided"
        value: "provided"
      - label: "selfsigned"
        value: "selfsigned"
  key:
    __metadata:
      label: "Private key"
      description: "Base64 encoded TLS private key"
      type: "string"
      required: false
  cert:
    __metadata:
      label: "TLS certificate"
      description: "Base64 encoded TLS certificate"
      type: "string"
      required: false
  cacert:
    __metadata:
      label: "CA certificate"
      description: "Base64 encoded CA certificate/bundle"
      type: "string"
      required: false

## License 
license:
  __metadata:
    label: "License"
    type: "string"
    required: true
    options:
    - label: "Accepted"
      value: "accept"
    - label: "Not accepted"
      value: "not accepted"