# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: "{{ template "fullname" . }}"
    component: "{{ .Values.kibana.name }}"
    release: "{{ .Release.Name }}"
    role: "kibana"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
  name: "{{ template "fullname" . }}"
spec:
  selector:
    matchLabels:
      app: "{{ template "fullname" . }}"
      component: "{{ .Values.kibana.name }}"
      release: "{{ .Release.Name }}"
      role: "kibana"
      heritage: "{{ .Release.Service }}"
  replicas: {{ .Values.kibana.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: "{{ template "fullname" . }}"
        component: "{{ .Values.kibana.name }}"
        role: "kibana"
        release: "{{ .Release.Name }}"
        chart: "{{ .Chart.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
        productName: Kibana
        productVersion: 5.5.1
        productID: none
    spec:
    {{- if .Values.kibana.managedMode }}
      tolerations:
      - key: "dedicated"
        operator: "Exists"
        effect: "NoSchedule"
    {{- end }}
{{ include "kibana.nodeaffinity" . | indent 6 }}
      # Required for multi-platform config
      securityContext:
        fsGroup: 1000
      containers:
{{- if .Values.kibana.managedMode }}
      - name: router
        image: {{ .Values.kibana.routerImage.repository }}:{{ .Values.kibana.routerImage.tag }}
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        command: ["/opt/ibm/router/entry/entrypoint.sh"]
        env:
        {{- if .Values.elasticsearch.security.enabled }}
        - name: KEYPASSPHRASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.elasticsearch.security.secretRoot }}-elasticsearch-pki-secret
              key: appKeystorePassword
        {{- end }}
        {{- if eq .Release.Namespace "kube-system" }}
        - name: CLUSTER_DOMAIN
          value: "{{ template "clusterDomain" . }}"
        - name: WLP_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: platform-oidc-credentials
              key: WLP_CLIENT_ID
        {{- end }}
        ports:
        - name: router
          containerPort: {{ if .Values.elasticsearch.security.enabled }}8443{{ else }}8080{{ end }}
        volumeMounts:
          - name: router-config
            mountPath: "/opt/ibm/router/conf"
          - name: router-entry
            mountPath: "/opt/ibm/router/entry"
          {{- if .Values.elasticsearch.security.enabled }}
          - name: certs
            mountPath: "/opt/ibm/router/certs"
          {{- end }}
{{- end }}
      - name: kibana
        image: {{ .Values.kibana.image.repository }}:{{ .Values.kibana.image.tag }}
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        command: ["/bin/bash", "/scripts/entrypoint.sh"]
{{- if eq .Values.kibana.managedMode false }}
        ports:
        - containerPort: {{ .Values.kibana.internal }}
          name: ui
{{- end }}
        volumeMounts:
        - name: config-x86
          mountPath: /usr/share/kibana-config-x86/kibana.yml
          subPath: kibana.yml
        - name: config-ppc
          mountPath: /usr/share/kibana-config-ppc/kibana.yml
          subPath: kibana.yml
        - name: cache
          mountPath: /usr/share/kibana/optimize
        - name: entrypoint
          mountPath: /scripts
{{- if .Values.elasticsearch.security.enabled }}
        - name: certs
          mountPath: "/usr/share/elasticsearch/config/tls"
          readOnly: true
{{- end }}
        resources:
          limits:
            memory: {{ .Values.kibana.memoryLimit }}
        env:
        - name: "NODE_OPTIONS"
          value: "--max-old-space-size={{ .Values.kibana.maxOldSpaceSize }}"
        - name: CFG_BASEDIR
          value: /usr/share/kibana
{{- if .Values.elasticsearch.security.enabled }}
        - name: CA_TRUSTSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.elasticsearch.security.secretRoot }}-elasticsearch-pki-secret
              key: caTruststorePassword
        - name: SERVER_SSL_KEYPASSPHRASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.elasticsearch.security.secretRoot }}-elasticsearch-pki-secret
              key: appKeystorePassword
        - name: ELASTICSEARCH_SSL_KEYPASSPHRASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.elasticsearch.security.secretRoot }}-elasticsearch-pki-secret
              key: appKeystorePassword
{{- end }}
      volumes:
        - name: cache
          emptyDir:
            medium: ""
        - name: config-x86
          configMap:
            name: {{ template "fullname" . }}-config
            items:
              - key: kibana.yml-x86
                path: kibana.yml
        - name: config-ppc
          configMap:
            name: {{ template "fullname" . }}-config
            items:
              - key: kibana.yml-ppc
                path: kibana.yml
        - name: entrypoint
          configMap:
            name: {{ template "fullname" . }}-config
            defaultMode: 365
            items:
              - key: kibana-entrypoint.sh
                path: entrypoint.sh
              - key: map-config.sh
                path: map-config.sh
{{- if .Values.kibana.managedMode }}
        - name: router-config
          configMap:
            name: {{ template "fullname" . }}-nginx-config
        - name: router-entry
          configMap:
            name: {{ template "fullname" . }}-router-entrypoint
            defaultMode: 0744
{{- end }}
{{- if .Values.elasticsearch.security.enabled }}
        - name: certs
          secret:
            secretName: {{ .Values.elasticsearch.security.secretRoot }}-certs
      restartPolicy: Always
{{- end }}

{{- if .Values.kibana.managedMode }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}-router-entrypoint
data:
  entrypoint.sh: |
    #!/bin/sh
    echo "Copying"
{{- if .Values.elasticsearch.security.enabled }}
    cp -f /opt/ibm/router/certs/kibanarouter.crt /opt/ibm/router/nginx/conf/server.crt
    cp -f /opt/ibm/router/certs/kibanarouter.key /opt/ibm/router/nginx/conf/server.key
    echo $KEYPASSPHRASE > /opt/ibm/router/nginx/conf/passphrases
{{- end }}
    cp -f /opt/ibm/router/conf/nginx.conf /opt/ibm/router/nginx/conf/nginx.conf
    echo "Starting..."
    nginx -g 'daemon off;'

{{- end }}
