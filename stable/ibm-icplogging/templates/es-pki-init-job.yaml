{{- if .Values.security.enabled }}
# Licensed Materials - Property of IBM
# 5737-E67
# @ Copyright IBM Corporation 2016, 2018. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ template "elasticsearch.fullname" . }}-pki-init"
  labels:
    app: "{{ template "elasticsearch.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "secret-init"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-delete-policy": hook-succeeded
    "helm.sh/hook-weight": "-9"
spec:
  template:
    metadata:
      labels:
        app: "{{ template "elasticsearch.fullname" . }}"
        component: "secret-init"
    spec:
{{ include "elasticsearch.nodeaffinity" . | indent 6 }}
      containers:
      - image: "{{ .Values.elasticsearch.pkiInitImage.repository }}:{{ .Values.elasticsearch.pkiInitImage.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: kubectl
  {{- if eq .Values.security.ca.origin "external" }}
        volumeMounts:
        - name: ca
          mountPath: /etc/icp-ca/chain-ca.pem
          subPath: chain-ca.pem
        - name: ca
          mountPath: /etc/icp-ca/signing-ca.pem
          subPath: signing-ca.pem
        - name: ca
          mountPath: /etc/icp-ca/signing-ca.key
          subPath: signing-ca.key
  {{- end }}
        env:
        - name: RELEASE_NAME
          value: "{{ template "fullname" . }}"
  {{- if eq .Values.security.ca.origin "external" }}
        - name: CA_LOCATION
          value: "/etc/icp-ca"
  {{- end }}
        - name: CA_KEYSTORE_PASSWORD
          value: "{{ .Values.security.ca.keystore.password | b64enc }}"
        - name: CA_TRUSTSTORE_PASSWORD
          value: "{{ .Values.security.ca.truststore.password | b64enc }}"
        - name: APP_KEYSTORE_PASSWORD
          value: "{{ .Values.security.app.keystore.password | b64enc }}"
        - name: CERT1_NAME
          value: 'sgadmin'
        - name: CERT1_KEYSTORE
          value: 'jks'
        - name: CERT2_NAME
          value: 'kibana'
        - name: CERT2_KEYSTORE
          value: 'pem'
        - name: CERT2_SAN
          value: 'dns:kibana,dns:localhost,ip:127.0.0.1'
        - name: CERT2_KEY_FORMAT
          value: 'pkcs8'
        - name: CERT3_NAME
          value: 'logstash'
        - name: CERT3_KEYSTORE
          value: 'pem'
        - name: CERT3_SAN
          value: 'dns:logstash,dns:localhost,ip:127.0.0.1'  # filebeat need this to match the logstash service dns name
        - name: CERT3_KEY_FORMAT
          value: 'pkcs8'
        - name: CERT4_NAME
          value: 'logstash-monitoring'
        - name: CERT4_KEYSTORE
          value: 'jks'
        - name: CERT5_NAME
          value: 'logstash-elasticsearch'
        - name: CERT5_KEYSTORE
          value: 'jks'
        - name: CERT6_NAME
          value: 'filebeat'
        - name: CERT6_KEYSTORE
          value: 'pem'
        - name: CERT6_KEY_FORMAT
          value: 'pkcs1'
        - name: CERT7_NAME
          value: 'curator'
        - name: CERT7_KEYSTORE
          value: 'pem'
        - name: CERT7_SAN
          value: 'dns:localhost,ip:127.0.0.1'
        - name: CERT7_KEY_FORMAT
          value: 'pkcs1'
        - name: CERT7_KEY_ENCRYPTION
          value: 'false'
        - name: CERT8_NAME
          value: 'superuser'
        - name: CERT8_KEYSTORE
          value: 'pem'
        - name: CERT8_KEY_FORMAT
          value: 'pkcs1'
        - name: CERT9_NAME
          value: 'elasticsearch'
        - name: CERT9_KEYSTORE
          value: 'jks'
        - name: CERT9_SAN
          value: 'dns:elasticsearch,dns:localhost,ip:127.0.0.1'
        - name: CERT10_NAME
          value: 'elasticsearch-transport'
        - name: CERT10_KEYSTORE
          value: 'jks'
        - name: CERT10_SAN
          value: 'dns:localhost,ip:127.0.0.1'
        - name: CERT11_NAME
          value: 'kibanarouter'
        - name: CERT11_KEYSTORE
          value: 'pem'
        - name: CERT11_KEY_FORMAT
          value: 'pkcs1'
      restartPolicy: Never
  {{- if eq .Values.security.ca.origin "external" }}
      volumes:
        - name: ca
          secret:
            secretName: {{ .Values.security.ca.external.secretName }}
            items:
              - key: {{ .Values.security.ca.external.certFieldName }}
                path: chain-ca.pem
              - key: {{ .Values.security.ca.external.certFieldName }}
                path: signing-ca.pem
              - key: {{ .Values.security.ca.external.keyFieldName }}
                path: signing-ca.key
  {{- end }}
{{- end }}
