{{ if and .Values.global.persistence.enabled (not .Values.elasticsearch.volumeClaim.existingClaimName) -}}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-{{ .Values.elasticsearch.volumeClaim.name }} 
  labels:
    app: {{ .Release.Name }}-{{ .Chart.Name }}-elasticsearch
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  {{- if .Values.global.persistence.useDynamicProvisioning }}
  ## if present, use the storageClassName from the values.yaml, else use the
  ## default storageClass setup by kube Administrator
  ##
  ## setting storageClassName to nil means use the default storage class
  storageClassName: {{ default nil .Values.elasticsearch.volumeClaim.storageClassName | quote }}
  {{- else }}
  ## disable dynamic provisioning
  storageClassName: ""
  {{- end }}
  accessModes:
     - {{ .Values.elasticsearch.volumeClaim.accessMode }} 
  resources:
    requests:
      storage: {{ .Values.elasticsearch.volumeClaim.size }}
  {{- if (not .Values.global.persistence.useDynamicProvisioning ) }}
  selector:
    matchLabels:
      assign-to: "{{ .Release.Name }}-es"
  {{- end }}
{{- end }}
