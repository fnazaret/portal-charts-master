apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-s4is-config
  labels:
     app: {{ template "fullname" . }}-s4is-config
     chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
     release: "{{ .Release.Name }}"
     heritage: "{{ .Release.Service }}" 
data:
  jvm.options: |-
    -Xmx4096M
    -Xms1024M
  storage-backend.properties: |-
    # storage backend ConfigMap
    gremlin.graph=org.janusgraph.core.JanusGraphFactory
    storage.backend=cassandra
    storage.hostname={{ .Release.Name }}-cassandra
    schema.default=none
    # index backend
    index.search.backend=solr
    index.search.solr.mode=cloud
    index.search.solr.zookeeper-url={{ .Release.Name }}-zookeeper:2181/{{ .Release.Name }}-shop4info-solr
  kafka-consumer.properties: |-
    # configMap
    # old consumer props
    zookeeper.connect={{ .Release.Name }}-iisdocker:52181
    group.id=KnowledgeGraphConsumerGroup
    zookeeper.connection.timeout.ms=300000
    zookeeper.session.timeout.ms=300000
    zookeeper.sync.time.ms=2000
    auto.commit.interval.ms=10000
    # new consumer props
    bootstrap.servers={{ .Release.Name }}-iisdocker:59092
    session.timeout.ms=30000
    key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
    # custom props
    consumer.topic.id=igc-kg-bridge-out
    consumer.thread.pool=1
    # dispatcher
    dispatcher.thread.pool=30
    dispatcher.message.buffer=3000
    dispatcher.special.handling.host=true
  storage-backend-type-registry.properties: |-
    # ConfigMap
    # storage backend for type registry
    gremlin.graph=org.janusgraph.core.JanusGraphFactory
    storage.backend=cassandra
    storage.hostname={{ .Release.Name }}-cassandra
    storage.connection-timeout=300000
    schema.default=none
  search.properties: |
    # query time
    # query.initialMaxResults + query.maxNeighborsTotal denotes maximum possible matches returned by search
    # initial max results to fetch from mixed index query (e.g. Solr)
    query.initialMaxResults=1000
    # max total number of neighbors to fetch all matched vertices
    query.maxNeighborsTotal=500
    # max number of neighbors to fetch for single graph vertex
    # useful to filter supernodes connected to most vertices in the graph
    query.maxNeighborsPerNode=10
    # similarity score modifier for neighbor matches
    # value is multiplied by origin vertex score
    query.neighborSimilariyFactor=0.3
    # solr mm param
    # if not set, there is no minimal matches required, query operator becomes purely OR
    #query.minMatch=2<-1
    # solr tie param
    query.tieBreaker=0.1
    # boost for name field (tokenized)
    query.nameTextBoost=2.0
    # boost for name field exact matches
    query.nameExactBoost=5.0
    # boost for name field partial matches (starts with)
    query.namePartialBoost=2.5
    # boost for text fields partial matches (starts with)
    query.textPartialBoost=0.75
    # compute time
    # global properties for all features that do not define their own settings
    # default schedule (crontab format)
    # use none to disable schedule based compute
    compute.schedule=0 0 0 * * ?
    # number of vertices to process at once
    compute.batchsize=1000
    # minimum time since last compute that triggers refresh (in hours)
    # by default, do not update 1 week old (or newer) stats
    compute.timeDelta=168
    # event driven compute
    # calculate stats for newly created vertices
    compute.onCreate=true
    # end of config
  scheduler.properties: |
    org.quartz.scheduler.instanceName = Shop4InfoScheduler
    org.quartz.threadPool.threadCount = 5
    org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
    org.quartz.scheduler.interruptJobsOnShutdown=true
    # plugins
    #org.quartz.plugin.triggerHistory.class=org.quartz.plugins.history.LoggingTriggerHistoryPlugin
    org.quartz.plugin.jobHistory.class=org.quartz.plugins.history.LoggingJobHistoryPlugin
    org.quartz.plugin.shutdownHook.class=org.quartz.plugins.management.ShutdownHookPlugin
    org.quartz.plugin.shutdownHook.cleanShutdown=false
    # end of config
  event-consumer.properties: |
    # The count of uses per asset would be stored on a time frame basis such as minute, hour, date, week, month or year.
    # Fixed as "date" and cannot be changed.
    uses.count.time.frame=date
    # http connection timeout in milliseconds
    scheduler.connectionTimeout=5000
    # http request timeout in milliseconds
    scheduler.requestTimeout=5000
    # max queue size for single event type
    scheduler.maxQueueSize=1000000
    # max queue size for each event type
    scheduler.sendThreshold=1000
    # max wait time in milliseconds before event is sent
    scheduler.gatherTime=5000
    # initial delay in milliseconds before events are started to be sent
    scheduler.initialDelay=5000
    #end configMap
  log4j2.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
    <!-- ConfigMap -->
    <Configuration status="warn" name="Shop4info_Liberty">
        <Properties>
            <Property name="logdir" value="logs/${web:servletContextName}" />
            <Property name="logpattern" value="%d [%t] %c{3} %-5level %m%n" />
        </Properties>
        <Appenders>
            <Console name="Console" target="SYSTEM_OUT">
                <PatternLayout pattern="${logpattern}" />
            </Console>
            <RollingFile name="Main" fileName="${logdir}/shop4info.log" filePattern="${logdir}/shop4info-%i.log" immediateFlush="true">
                <PatternLayout pattern="${logpattern}" />
                <Policies>
                    <OnStartupTriggeringPolicy />
                    <SizeBasedTriggeringPolicy size="10 MB" />
                </Policies>
                <!-- use fileIndex="nomax" to allow unlimited logging -->
                <DefaultRolloverStrategy max="20" fileIndex="min" />
            </RollingFile>
            <RollingFile name="Error" fileName="${logdir}/error.log" filePattern="${logdir}/error-%i.log" immediateFlush="true">
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" />
                <PatternLayout pattern="${logpattern}" />
                <Policies>
                    <OnStartupTriggeringPolicy />
                    <SizeBasedTriggeringPolicy size="10 MB" />
                </Policies>
                <DefaultRolloverStrategy max="10" fileIndex="min" />
            </RollingFile>
            <RollingFile name="Startup" fileName="${logdir}/startup.log" filePattern="${logdir}/startup-%i.log" immediateFlush="true">
                <MarkerFilter marker="STARTUP" onMatch="ACCEPT" onMismatch="DENY" />
                <PatternLayout pattern="${logpattern}" />
                <Policies>
                    <OnStartupTriggeringPolicy />
                    <SizeBasedTriggeringPolicy size="1 MB" />
                </Policies>
                <DefaultRolloverStrategy max="5" fileIndex="min" />
            </RollingFile>
            <RollingFile name="Scheduler" fileName="${logdir}/scheduler.log" filePattern="${logdir}/scheduler-%i.log"
                immediateFlush="true">
                <PatternLayout pattern="${logpattern}" />
                <Policies>
                    <OnStartupTriggeringPolicy />
                    <SizeBasedTriggeringPolicy size="10 MB" />
                </Policies>
                <DefaultRolloverStrategy max="10" fileIndex="min" />
            </RollingFile>
        </Appenders>
        <Loggers>
            <Root level="info">
                 <!--AppenderRef ref="Console" /-->
                <AppenderRef ref="Main">
                    <ThreadContextMapFilter onMatch="DENY" onMismatch="NEUTRAL">
                        <KeyValuePair key="quartz-job" value="true" />
                    </ThreadContextMapFilter>
                </AppenderRef>
                <AppenderRef ref="Error" />
                <AppenderRef ref="Startup" />
                <AppenderRef ref="Scheduler">
                    <ThreadContextMapFilter onMatch="ACCEPT" onMismatch="DENY">
                        <KeyValuePair key="quartz-job" value="true" />
                    </ThreadContextMapFilter>
                </AppenderRef>
            </Root>
            <Logger level="info" name="com.ibm.udg.shop4info" />
            <Logger level="info" name="org.quartz" additivity="false">
                 <!--AppenderRef ref="Console" /-->
                <AppenderRef ref="Error" />
                <AppenderRef ref="Scheduler" />
            </Logger>
            <Logger level="info" name="com.ibm.udg.shop4info.scheduler" additivity="false">
                 <!--AppenderRef ref="Console" /-->
                <AppenderRef ref="Error" />
                <AppenderRef ref="Scheduler" />
            </Logger>
        </Loggers>
    </Configuration>
    <!-- ConfigMap End -->
